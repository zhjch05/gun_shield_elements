use bevy::prelude::*;

/// Component for invulnerability state
#[derive(Component, Debug, Clone)]
pub struct Invulnerability {
    pub is_invulnerable: bool,
}

impl Default for Invulnerability {
    fn default() -> Self {
        Self {
            is_invulnerable: false,
        }
    }
}

impl Invulnerability {
    pub fn new() -> Self {
        Self {
            is_invulnerable: false,
        }
    }

    pub fn activate(&mut self) {
        self.is_invulnerable = true;
    }

    pub fn deactivate(&mut self) {
        self.is_invulnerable = false;
    }

    pub fn is_active(&self) -> bool {
        self.is_invulnerable
    }
} 